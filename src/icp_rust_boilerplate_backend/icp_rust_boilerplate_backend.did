type AddEmployeePayload = record {
  name : text;
  role : text;
  hourly_rate : float64;
  workshop_id : nat64;
};
type CreateProjectPayload = record {
  cost_estimate : float64;
  name : text;
  description : text;
  deadline : nat64;
  workshop_id : nat64;
};
type CreateWorkshopPayload = record {
  contact : text;
  owner : text;
  name : text;
  email : text;
  location : text;
};
type Employee = record {
  id : nat64;
  name : text;
  role : text;
  hourly_rate : float64;
  workshop_id : nat64;
  is_active : bool;
};
type Expense = record {
  id : nat64;
  date : nat64;
  description : text;
  workshop_id : nat64;
  category : text;
  amount : float64;
};
type Inventory = record {
  id : nat64;
  item_name : text;
  workshop_id : nat64;
  unit_price : float64;
  quantity : nat64;
  restock_date : nat64;
};
type Message = variant {
  Error : text;
  InvalidPayload : text;
  NotFound : text;
  Success : text;
};
type Project = record {
  id : nat64;
  status : text;
  cost_estimate : float64;
  name : text;
  description : text;
  deadline : nat64;
  workshop_id : nat64;
};
type RecordExpensePayload = record {
  description : text;
  workshop_id : nat64;
  category : text;
  amount : float64;
};
type Result = variant { Ok : Employee; Err : Message };
type Result_1 = variant { Ok : float64; Err : Message };
type Result_2 = variant { Ok : Project; Err : Message };
type Result_3 = variant { Ok : Workshop; Err : Message };
type Result_4 = variant { Ok : Message; Err : Message };
type Result_5 = variant { Ok : vec Workshop; Err : Message };
type Result_6 = variant { Ok : Expense; Err : Message };
type Result_7 = variant { Ok : Inventory; Err : Message };
type UpdateInventoryPayload = record {
  item_name : text;
  workshop_id : nat64;
  unit_price : float64;
  quantity : nat64;
};
type Workshop = record {
  id : nat64;
  contact : text;
  owner : text;
  name : text;
  created_at : nat64;
  email : text;
  location : text;
};
service : {
  add_employee : (AddEmployeePayload) -> (Result);
  calculate_inventory_value : (nat64) -> (Result_1) query;
  calculate_total_expenses : (nat64) -> (Result_1) query;
  count_workshops : () -> (nat64) query;
  create_project : (CreateProjectPayload) -> (Result_2);
  create_workshop : (CreateWorkshopPayload) -> (Result_3);
  delete_workshop : (nat64) -> (Result_4);
  get_workshop_by_id : (nat64) -> (Result_3) query;
  list_workshops : () -> (Result_5);
  record_expense : (RecordExpensePayload) -> (Result_6);
  update_inventory : (UpdateInventoryPayload) -> (Result_7);
  update_workshop_details : (nat64, opt text, opt text) -> (Result_4);
}
